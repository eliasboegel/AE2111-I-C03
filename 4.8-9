from math import sin, cos
# F_tot is the total applied force to the fastener pattern 
# centre of gravity to the F_tot original location
# x_n is the fastener number (i.e fastener 2 -> x_n=2)

# Input for radial distance for fastener cg to ith fastener
# d is the distance between the attachment point and the fastener cg

h = 

rho_out = h/2 + ((40.9**0.5)*((h**0.5)/(2**0.5))) + 20.983148
rho_in = h/2 + ((22.1**0.5)*((h**0.5)/(2**0.5))) + 12.008

d = 
F_tot= 89.666 / 2
#theta is the angle to resolve the forces
theta=45
Fz_tot=F_tot*sin(theta)
n_f_total = 8
F_pi = Fz_tot/n_f_total

diameter_hole = 4
radius_hole = diameter_hole /2
Ai= pi * radius_hole**2
Mx=(Fz_tot*d)

#find sum of inner fasteners

n_f_in = 4 #n_f_in is the number of inner fasteners
rho_in = int(rho_in) #radial distance to the fastener cg of the inner fasteners
Sum_Ai_rho2_in = 0
Sum_Ai_rho_in = 0

Arho_in = Ai * rho_in
Arho2_in = Ai * rho_in**2
for k in range(n_f_in):
  Sum_Ai_rho_in = Sum_Ai_rho_in + Ai * rho_in
  
for h in range(n_f_in):
  Sum_Ai_rho2_in = Sum_Ai_rho2_in + Ai * rho_in^2

#find sum of the outer fasteners

n_f_out = 4 #n_f_out is the number of outer fasteners
rho_out = int(rho_out) #radial distance to the fastener cg of the inner fasteners
Sum_Ai_rho2_out = 0
Sum_Ai_rho_out = 0

Arho_out = Ai * rho_out
Arho2_out = Ai * rho_out**2
for k in range(n_f_out):
  Sum_Ai_rho_out = Sum_Ai_rho_out + Ai * rho_out
  
for h in range(n_f_out):
  Sum_Ai_rho2_out = Sum_Ai_rho2_out + Ai * rho_out^2

#find total sum of the fasteners

totSum_Ai_rho = Sum_Ai_rho_out + Sum_Ai_rho_in
totSum_Ai_rho2 = Sum_Ai_rho2_out + Sum_Ai_rho2_in


A = Mx * totSum_Ai_rho
B = totSum_Ai_rho2
print(A/B,Mx)


Fp_Mx = Mx*(A/B)


Halloooo
